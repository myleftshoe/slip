{"version":3,"sources":["slip.js","SlipMove.js","App.js","array.js","index.js"],"names":["slip","testElementStyle","document","createElement","style","transitionJSPropertyName","transformJSPropertyName","transformCSSPropertyName","Slip","container","options","arguments","length","undefined","raised","querySelector","addEventListener","Error","this","window","cancel","setState","bind","states","idle","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onContainerFocus","onContextMenu","attach","prototype","state","target","usingTouch","mouseHandlersAttached","startPosition","latestPosition","previousPosition","canPreventScrolling","removeMouseHandlers","node","willChange","getElementsByTagName","touchAction","undecided","holdTimer","_window$getComputedSt","getComputedStyle","marginTop","marginBottom","height","offsetHeight","Math","max","parseInt","dispatch","originalTarget","setTimeout","move","getAbsoluteMovement","x","y","reorder","leaveState","clearTimeout","onMove","onLeave","onEnd","allowDefault","_this","focus","_window$getComputedSt2","originalIndex","mouseOutsideTimer","nodes","children","zero","offsetTop","otherNodes","i","n","t","push","pos","classList","remove","add","draggingClassName","zIndex","getSpliceIndex","spliceIndex","minMoveY","maxMoveY","handleMove","updateScrolling","getTotalMovement","concat","relativeIndex","startIndex","endIndex","o","off","requestAnimationFrame","call","animateToZero","Promise","resolve","reject","forEach","insertBefore","detach","passive","capture","removeEventListener","newStateCtor","ctor","prevState","nextState","findTargetNode","targetNode","parentNode","e","stopPropagation","addMouseHandlers","documentElement","relatedTarget","button","setTarget","startAtPosition","clientX","clientY","time","timeStamp","touches","scrollContainer","body","scrollHeight","clientHeight","origScrollTop","scrollTop","origScrollHeight","updatePosition","preventDefault","scrollOffset","abs","directionX","directionY","offset","scrollable","containerRect","getBoundingClientRect","targetRect","bottomOffset","min","bottom","innerHeight","topOffset","top","maxScrollTop","eventName","detail","event","createEvent","initCustomEvent","initEvent","dispatchEvent","callback","_this2","_target","_transformMatrix$matc","getPropertyValue","match","_transformMatrix$matc2","Object","slicedToArray","offsetX","offsetY","transitionProperty","animateDrop","contains","reordering","handleBeforeReorder","props","disableMove","onMoveStart","handleReorder","_e$detail","oldIndex","newIndex","onMoveEnd","init","elevateItem","_this$props","flipMoveProps","_this$props$style","position","react_default","a","id","ref","objectSpread","react_flip_move_es","assign","typeName","disableAllAnimations","Component","defaultProps","generateItems","toConsumableArray","Array","keys","map","k","actions","reverse","_ref","arr","items","slice","shuffle","_ref2","random","sort","b","_ref3","removeFrom","insertAt","isNaN","Number","_arr","item","splice","_ref4","className","onClick","SlipMove_default","appearAnimation","App_ListItem","key","ListItem","PureComponent","ReactDOM","render","src_App_default","getElementById"],"mappings":"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","file":"static/js/main.4f3c9be1.chunk.js","sourcesContent":["/*\r\n    Slip - swiping and reordering in lists of elements on touch screens, no fuss.\r\n\r\n    Fires these events on list elements:\r\n\r\n        • slip:reorder\r\n            Element has been dropped in new location. event.detail contains the following:\r\n                • insertBefore: DOM node before which element has been dropped (null is the end of the list). Use with node.insertBefore().\r\n                • spliceIndex: Index of element before which current element has been dropped, not counting the element iself.\r\n                               For use with Array.splice() if the list is reflecting objects in some array.\r\n                • originalIndex: The original index of the element before it was reordered.\r\n\r\n        • slip:beforereorder\r\n            When reordering movement starts.\r\n            Element being reordered gets class `slip-dragging`.\r\n            If you execute event.preventDefault() then the element will not move at all.\r\n\r\n        • slip:beforewait\r\n            If you execute event.preventDefault() then reordering will begin immediately, blocking ability to scroll the page.\r\n\r\n        • slip:tap\r\n            When element was tapped without being swiped/reordered. You can check `event.target` to limit that behavior to drag handles.\r\n\r\n\r\n    Usage:\r\n\r\n        CSS:\r\n            You should set `user-select:none` (and WebKit prefixes, sigh) on list elements,\r\n            otherwise unstoppable and glitchy text selection in iOS will get in the way.\r\n\r\n        list.addEventListener('slip:beforereorder', function(e) {\r\n            if (shouldNotReorder(e.target)) e.preventDefault();\r\n        });\r\n\r\n        list.addEventListener('slip:reorder', function(e) {\r\n            // e.target reordered.\r\n            if (reorderedOK) {\r\n                e.target.parentNode.insertBefore(e.target, e.detail.insertBefore);\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n    Requires:\r\n        • Touch events\r\n        • CSS transforms\r\n        • Function.bind()\r\n\r\n    Caveats:\r\n        • Elements must not change size while reordering or swiping takes place (otherwise it will be visually out of sync)\r\n*/\r\n/*! @license\r\n    Slip.js 1.2.0\r\n\r\n    © 2014 Kornel Lesiński <kornel@geekhood.net>. All rights reserved.\r\n\r\n    Redistribution and use in source and binary forms, with or without modification,\r\n    are permitted provided that the following conditions are met:\r\n\r\n    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n\r\n    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and\r\n       the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nexport default (function () {\r\n\r\n    // -webkit-mess\r\n    const testElementStyle = document.createElement('div').style;\r\n\r\n    const transitionJSPropertyName = \"transition\" in testElementStyle ? \"transition\" : \"webkitTransition\";\r\n    const transformJSPropertyName = \"transform\" in testElementStyle ? \"transform\" : \"webkitTransform\";\r\n    const transformCSSPropertyName = transformJSPropertyName === \"webkitTransform\" ? \"-webkit-transform\" : \"transform\";\r\n\r\n    function Slip(container, options = { raised: true }) {\r\n        if ('string' === typeof container) container = document.querySelector(container);\r\n        if (!container || !container.addEventListener) throw new Error(\"Please specify DOM node to attach to\");\r\n\r\n        if (!this || this === window) return new Slip(container);\r\n\r\n        this.options = options;\r\n\r\n        // Functions used for as event handlers need usable `this` and must not change to be removable\r\n        this.cancel = this.setState.bind(this, this.states.idle);\r\n        this.onTouchStart = this.onTouchStart.bind(this);\r\n        this.onTouchMove = this.onTouchMove.bind(this);\r\n        this.onTouchEnd = this.onTouchEnd.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.onContainerFocus = this.onContainerFocus.bind(this);\r\n        this.onContextMenu = this.onContextMenu.bind(this);\r\n\r\n        this.setState(this.states.idle);\r\n        this.attach(container);\r\n    }\r\n\r\n    function addClass(nodes) {\r\n        return new Promise(function (resolve, reject) {\r\n            for (let i = 0, n = nodes.length; i < n; i++) {\r\n                nodes[i].node.classList.add('slip-transition');\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    function resetOtherNodes(nodes) {\r\n        return new Promise(function (resolve, reject) {\r\n            nodes.forEach(function (n) {\r\n                n.node.style[transformJSPropertyName] = '';\r\n                n.node.style.willChange = null;\r\n                n.node.classList.remove('slip-transition');\r\n            });\r\n            resolve();\r\n        });\r\n    }\r\n\r\n    // All functions in states are going to be executed in context of Slip object\r\n    Slip.prototype = {\r\n\r\n        container: null,\r\n        state: null,\r\n\r\n        target: null, // the tapped/swiped/reordered node with height and backed up styles\r\n\r\n        usingTouch: false, // there's no good way to detect touchscreen preference other than receiving a touch event (really, trust me).\r\n        mouseHandlersAttached: false,\r\n\r\n        startPosition: null, // x,y,time where first touch began\r\n        latestPosition: null, // x,y,time where the finger is currently\r\n        previousPosition: null, // x,y,time where the finger was ~100ms ago (for velocity calculation)\r\n\r\n        canPreventScrolling: false,\r\n\r\n        states: {\r\n            idle: function idleStateInit() {\r\n                this.removeMouseHandlers();\r\n                if (this.target) {\r\n                    this.target.node.style.willChange = '';\r\n                    this.target = null;\r\n                }\r\n                this.usingTouch = false;\r\n                document.getElementsByTagName(\"BODY\")[0].style.touchAction = '';\r\n                return {};\r\n            },\r\n\r\n            undecided: function undecidedStateInit() {\r\n\r\n                document.getElementsByTagName(\"BODY\")[0].style.touchAction = 'none';\r\n                let node = this.target.node;\r\n                const { marginTop, marginBottom } = window.getComputedStyle(node);\r\n                this.target.height = node.offsetHeight + Math.max(parseInt(marginTop), parseInt(marginBottom));\r\n                node.style.willChange = transformCSSPropertyName;\r\n\r\n                let holdTimer;\r\n                if (!this.dispatch(this.target.originalTarget, 'beforewait')) {\r\n                    if (this.dispatch(this.target.originalTarget, 'beforereorder')) {\r\n                        this.setState(this.states.reorder);\r\n                    }\r\n                } else {\r\n                    holdTimer = setTimeout(function () {\r\n                        const move = this.getAbsoluteMovement();\r\n                        if (this.canPreventScrolling && move.x < 15 && move.y < 25) {\r\n                            if (this.dispatch(this.target.originalTarget, 'beforereorder')) {\r\n                                this.setState(this.states.reorder);\r\n                            }\r\n                        }\r\n                    }.bind(this), 300);\r\n                }\r\n\r\n                return {\r\n                    leaveState: function () {\r\n                        clearTimeout(holdTimer);\r\n                    },\r\n\r\n                    onMove: function () {\r\n                        const move = this.getAbsoluteMovement();\r\n\r\n                        if (move.y > 20) {\r\n                            this.setState(this.states.idle);\r\n                        }\r\n\r\n                        // Chrome likes sideways scrolling :(\r\n                        if (move.x > move.y * 1.2) return false;\r\n                    },\r\n\r\n                    onLeave: function () {\r\n                        this.setState(this.states.idle);\r\n                    },\r\n\r\n                    onEnd: function () {\r\n                        const allowDefault = this.dispatch(this.target.originalTarget, 'tap');\r\n                        this.setState(this.states.idle);\r\n                        return allowDefault;\r\n                    },\r\n                };\r\n            },\r\n\r\n            reorder: function reorderStateInit() {\r\n                let node = this.target.node;\r\n                node.focus && node.focus();\r\n\r\n                const { marginTop, marginBottom } = window.getComputedStyle(node);\r\n                this.target.height = node.offsetHeight + Math.max(parseInt(marginTop), parseInt(marginBottom));\r\n\r\n                const nodes = this.container.children;\r\n                let originalIndex;\r\n                const zero = node.offsetTop + this.target.height / 2;\r\n                const otherNodes = [];\r\n                for (let i = 0, n = nodes.length; i < n; i++) {\r\n                    if (nodes[i] === node) {\r\n                        originalIndex = i;\r\n                        continue;\r\n                    }\r\n                    // nodes[i].classList.add('slip-transition');\r\n                    const t = nodes[i].offsetTop;\r\n                    otherNodes.push({\r\n                        node: nodes[i],\r\n                        pos: t + (t < zero ? nodes[i].offsetHeight : 0) - zero,\r\n                    });\r\n                }\r\n                // addClass(otherNodes);\r\n                node.classList.remove('slip-transition');\r\n                node.classList.add('slip-dragging');\r\n                if (this.options.draggingClassName)\r\n                    node.classList.add(this.options.draggingClassName);\r\n                if (this.options.raised)\r\n                    node.classList.add('slip-shadow');\r\n                node.style.zIndex = '99999';\r\n\r\n                let mouseOutsideTimer;\r\n\r\n\r\n                const getSpliceIndex = (move) => {\r\n\r\n                    let i, spliceIndex;\r\n                    if (move.y < 0) {\r\n                        for (i = 0; i < otherNodes.length; i++) {\r\n                            if (otherNodes[i].pos > move.y) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        spliceIndex = i;\r\n                    } else {\r\n                        for (i = otherNodes.length - 1; i >= 0; i--) {\r\n                            if (otherNodes[i].pos < move.y) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        spliceIndex = i + 1;\r\n                    }\r\n                    return spliceIndex;\r\n                }\r\n\r\n                let minMoveY = 0;\r\n                let maxMoveY = 0;\r\n\r\n                const handleMove = () => {\r\n\r\n                    if (!this.target) return;\r\n                    this.updateScrolling();\r\n\r\n                    if (mouseOutsideTimer) {\r\n                        // don't care where the mouse is as long as it moves\r\n                        clearTimeout(mouseOutsideTimer);\r\n                        mouseOutsideTimer = null;\r\n                    }\r\n\r\n                    const move = this.getTotalMovement();\r\n                    if (move.y < minMoveY) minMoveY = move.y;\r\n                    if (move.y > maxMoveY) maxMoveY = move.y;\r\n\r\n                    this.target.node.style[transformJSPropertyName] = `translate(${move.x}px,${move.y}px)`;\r\n\r\n                    const spliceIndex = getSpliceIndex(move);\r\n                    const relativeIndex = spliceIndex - originalIndex;\r\n                    if (this.target.relativeIndex === undefined)\r\n                        this.target.relativeIndex = relativeIndex;\r\n\r\n                    if (relativeIndex !== this.target.relativeIndex) {\r\n                        const startIndex = getSpliceIndex({ x: 0, y: minMoveY });\r\n                        const endIndex = getSpliceIndex({ x: 0, y: maxMoveY });\r\n                        const height = this.target.height;\r\n                        for (let i = startIndex; i < endIndex; i++) {\r\n                            let o = otherNodes[i];\r\n                            o.node.classList.add('slip-transition');\r\n                            let off = 0;\r\n                            if (o.pos < 0 && move.y < 0 && o.pos > move.y) {\r\n                                off = height;\r\n                            }\r\n                            else if (o.pos > 0 && move.y > 0 && o.pos < move.y) {\r\n                                off = -height;\r\n                            }\r\n                            o.node.style[transformJSPropertyName] = off ? `translateY(${off}px)` : '';\r\n                        }\r\n                    }\r\n\r\n                    this.target.relativeIndex = relativeIndex;\r\n                    this.target.spliceIndex = spliceIndex;\r\n                };\r\n\r\n                function onMove() {\r\n                    /*jshint validthis:true */\r\n                    requestAnimationFrame(handleMove);\r\n                    return false;\r\n                }\r\n\r\n                onMove.call(this);\r\n\r\n                return {\r\n                    leaveState: function () {\r\n                        if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer);\r\n\r\n                        if (this.container.focus) {\r\n                            this.container.focus();\r\n                        }\r\n\r\n                        this.animateToZero(function (target) {\r\n                            target.node.style.zIndex = '';\r\n                        });\r\n                        resetOtherNodes(otherNodes);\r\n                    },\r\n\r\n                    onMove: onMove,\r\n\r\n                    onLeave: function () {\r\n                        // don't let element get stuck if mouse left the window\r\n                        // but don't cancel immediately as it'd be annoying near window edges\r\n                        if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer);\r\n                        mouseOutsideTimer = setTimeout(function () {\r\n                            mouseOutsideTimer = null;\r\n                            this.cancel();\r\n                        }.bind(this), 700);\r\n                    },\r\n\r\n                    onEnd: function () {\r\n                        const { spliceIndex } = this.target;\r\n                        this.dispatch(this.target.node, 'reorder', {\r\n                            spliceIndex,\r\n                            originalIndex: originalIndex,\r\n                            insertBefore: otherNodes[spliceIndex] ? otherNodes[spliceIndex].node : null,\r\n                        });\r\n                        this.setState(this.states.idle);\r\n                        return false;\r\n                    },\r\n                };\r\n            },\r\n        },\r\n\r\n        attach: function (container) {\r\n            if (this.container) this.detach();\r\n\r\n            this.container = container;\r\n\r\n            this.container.addEventListener('focus', this.onContainerFocus, { passive: true, capture: false });\r\n\r\n            this.otherNodes = [];\r\n\r\n            // cancel is called e.g. when iOS detects multitasking gesture\r\n            this.container.addEventListener('touchcancel', this.cancel, { passive: true, capture: false });\r\n            this.container.addEventListener('touchstart', this.onTouchStart, { passive: true, capture: false });\r\n            this.container.addEventListener('touchmove', this.onTouchMove, { passive: false, capture: false });\r\n            this.container.addEventListener('touchend', this.onTouchEnd, { passive: false, capture: false });\r\n            this.container.addEventListener('mousedown', this.onMouseDown, { passive: true, capture: false });\r\n            this.container.addEventListener('contextmenu', this.onContextMenu, { passive: false, capture: false });\r\n            // mousemove and mouseup are attached dynamically\r\n        },\r\n\r\n        detach: function () {\r\n            this.cancel();\r\n\r\n            this.container.removeEventListener('mousedown', this.onMouseDown, { passive: true, capture: false });\r\n            this.container.removeEventListener('touchend', this.onTouchEnd, { passive: false, capture: false });\r\n            this.container.removeEventListener('touchmove', this.onTouchMove, { passive: false, capture: false });\r\n            this.container.removeEventListener('touchstart', this.onTouchStart, { passive: true, capture: false });\r\n            this.container.removeEventListener('touchcancel', this.cancel, { passive: true, capture: false });\r\n            this.container.removeEventListener('contextmenu', this.onContextMenu, { passive: true, capture: false });\r\n        },\r\n\r\n        setState: function (newStateCtor) {\r\n            if (this.state) {\r\n                if (this.state.ctor === newStateCtor) return;\r\n                if (this.state.leaveState) this.state.leaveState.call(this);\r\n            }\r\n\r\n            // Must be re-entrant in case ctor changes state\r\n            const prevState = this.state;\r\n            let nextState = newStateCtor.call(this);\r\n            if (this.state === prevState) {\r\n                nextState.ctor = newStateCtor;\r\n                this.state = nextState;\r\n            }\r\n        },\r\n\r\n        findTargetNode: function (targetNode) {\r\n            while (targetNode && targetNode.parentNode !== this.container) {\r\n                targetNode = targetNode.parentNode;\r\n            }\r\n            return targetNode;\r\n        },\r\n\r\n        onContainerFocus: function (e) {\r\n            e.stopPropagation();\r\n        },\r\n\r\n        addMouseHandlers: function () {\r\n            // unlike touch events, mousemove/up is not conveniently fired on the same element,\r\n            // but I don't need to listen to unrelated events all the time\r\n            if (!this.mouseHandlersAttached) {\r\n                this.mouseHandlersAttached = true;\r\n                document.documentElement.addEventListener('mouseleave', this.onMouseLeave, { passive: true, capture: false });\r\n                window.addEventListener('mousemove', this.onMouseMove, { passive: false, capture: true });\r\n                window.addEventListener('mouseup', this.onMouseUp, { passive: false, capture: true });\r\n                window.addEventListener('blur', this.cancel, { passive: true, capture: false });\r\n            }\r\n        },\r\n\r\n        removeMouseHandlers: function () {\r\n            if (this.mouseHandlersAttached) {\r\n                this.mouseHandlersAttached = false;\r\n                document.documentElement.removeEventListener('mouseleave', this.onMouseLeave, { passive: true, capture: false });\r\n                window.removeEventListener('mousemove', this.onMouseMove, { passive: false, capture: true });\r\n                window.removeEventListener('mouseup', this.onMouseUp, { passive: false, capture: true });\r\n                window.removeEventListener('blur', this.cancel, { passive: true, capture: false });\r\n            }\r\n        },\r\n\r\n        onMouseLeave: function (e) {\r\n            e.stopPropagation();\r\n            if (this.usingTouch) return;\r\n\r\n            if (e.target === document.documentElement || e.relatedTarget === document.documentElement) {\r\n                if (this.state.onLeave) {\r\n                    this.state.onLeave.call(this);\r\n                }\r\n            }\r\n        },\r\n\r\n        onMouseDown: function (e) {\r\n            e.stopPropagation();\r\n            if (this.usingTouch || e.button !== 0 || !this.setTarget(e)) return;\r\n\r\n            this.addMouseHandlers(); // mouseup, etc.\r\n\r\n            this.canPreventScrolling = true; // or rather it doesn't apply to mouse\r\n\r\n            this.startAtPosition({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                time: e.timeStamp,\r\n            });\r\n        },\r\n\r\n        onTouchStart: function (e) {\r\n            e.stopPropagation();\r\n            this.usingTouch = true;\r\n            this.canPreventScrolling = true;\r\n\r\n            // This implementation cares only about single touch\r\n            if (e.touches.length > 1) {\r\n                this.setState(this.states.idle);\r\n                return;\r\n            }\r\n\r\n            if (!this.setTarget(e)) return;\r\n\r\n            this.startAtPosition({\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n                time: e.timeStamp,\r\n            });\r\n        },\r\n\r\n        setTarget: function (e) {\r\n            const targetNode = this.findTargetNode(e.target);\r\n            if (!targetNode) {\r\n                this.setState(this.states.idle);\r\n                return false;\r\n            }\r\n\r\n            //check for a scrollable parent\r\n            let scrollContainer = targetNode.parentNode;\r\n            while (scrollContainer) {\r\n                if (scrollContainer === document.body) break;\r\n                if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n                scrollContainer = scrollContainer.parentNode;\r\n            }\r\n            scrollContainer = scrollContainer || document.body;\r\n\r\n            this.target = {\r\n                originalTarget: e.target,\r\n                node: targetNode,\r\n                scrollContainer: scrollContainer,\r\n                origScrollTop: scrollContainer.scrollTop,\r\n                origScrollHeight: scrollContainer.scrollHeight,\r\n            };\r\n            return true;\r\n        },\r\n\r\n        startAtPosition: function (pos) {\r\n            this.startPosition = this.previousPosition = this.latestPosition = pos;\r\n            this.setState(this.states.undecided);\r\n        },\r\n\r\n        updatePosition: function (e, pos) {\r\n            if (this.target == null) {\r\n                return;\r\n            }\r\n            this.latestPosition = pos;\r\n\r\n            if (this.state.onMove) {\r\n                if (this.state.onMove.call(this) === false) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n\r\n            // sample latestPosition 100ms for velocity\r\n            if (this.latestPosition.time - this.previousPosition.time > 100) {\r\n                this.previousPosition = this.latestPosition;\r\n            }\r\n        },\r\n\r\n        onMouseMove: function (e) {\r\n            e.stopPropagation();\r\n            this.updatePosition(e, {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                time: e.timeStamp,\r\n            });\r\n        },\r\n\r\n        onTouchMove: function (e) {\r\n            e.stopPropagation();\r\n            this.updatePosition(e, {\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n                time: e.timeStamp,\r\n            });\r\n\r\n            // In Apple's touch model only the first move event after touchstart can prevent scrolling (and event.cancelable is broken)\r\n            this.canPreventScrolling = false;\r\n        },\r\n\r\n        onMouseUp: function (e) {\r\n            e.stopPropagation();\r\n            if (this.usingTouch || e.button !== 0) return;\r\n\r\n            if (this.state.onEnd && false === this.state.onEnd.call(this)) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        onTouchEnd: function (e) {\r\n            e.stopPropagation();\r\n            if (e.touches.length > 1) {\r\n                this.cancel();\r\n            } else if (this.state.onEnd && false === this.state.onEnd.call(this)) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        onContextMenu: function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        },\r\n\r\n        getTotalMovement: function () {\r\n            if (!this.target) return;\r\n            const scrollOffset = this.target.scrollContainer.scrollTop - this.target.origScrollTop;\r\n            return {\r\n                x: this.latestPosition.x - this.startPosition.x,\r\n                y: this.latestPosition.y - this.startPosition.y + scrollOffset,\r\n                time: this.latestPosition.time - this.startPosition.time,\r\n            };\r\n        },\r\n\r\n        getAbsoluteMovement: function () {\r\n            const move = this.getTotalMovement();\r\n            return {\r\n                x: Math.abs(move.x),\r\n                y: Math.abs(move.y),\r\n                time: move.time,\r\n                directionX: move.x < 0 ? 'left' : 'right',\r\n                directionY: move.y < 0 ? 'up' : 'down',\r\n            };\r\n        },\r\n\r\n        updateScrolling: function () {\r\n            let triggerOffset = 40,\r\n                offset = 0;\r\n\r\n            const scrollable = this.target.scrollContainer,\r\n                containerRect = scrollable.getBoundingClientRect(),\r\n                targetRect = this.target.node.getBoundingClientRect(),\r\n                bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom,\r\n                topOffset = targetRect.top - Math.max(containerRect.top, 0),\r\n                maxScrollTop = this.target.origScrollHeight - Math.min(scrollable.clientHeight, window.innerHeight);\r\n\r\n            if (bottomOffset < triggerOffset) {\r\n                offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n            }\r\n            else if (topOffset < triggerOffset) {\r\n                offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n            }\r\n\r\n            scrollable.scrollTop = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset));\r\n        },\r\n\r\n        dispatch: function (targetNode, eventName, detail) {\r\n            let event = document.createEvent('CustomEvent');\r\n            if (event && event.initCustomEvent) {\r\n                event.initCustomEvent('slip:' + eventName, true, true, detail);\r\n            } else {\r\n                event = document.createEvent('Event');\r\n                event.initEvent('slip:' + eventName, true, true);\r\n                event.detail = detail;\r\n            }\r\n            return targetNode.dispatchEvent(event);\r\n        },\r\n\r\n        animateToZero: function (callback, target) {\r\n            // save, because this.target/container could change during animation\r\n            target = target || this.target;\r\n\r\n            const { node, height, relativeIndex } = target;\r\n            const transformMatrix = window.getComputedStyle(node).getPropertyValue(transformJSPropertyName);\r\n            const [, , , , translateX, translateY] = transformMatrix.match(/-?\\d+/g);\r\n            // const translateY = parseInt(window.getComputedStyle(node).getPropertyValue(transformJSPropertyName).split(\",\")[5]);\r\n            const [offsetX, offsetY] = [translateX, translateY - height * relativeIndex];\r\n\r\n            // By now item has moved to new location. Translate instantly to new position maintaining drag offset\r\n            node.style[transformJSPropertyName] = `translate(${offsetX}px,${offsetY}px)`\r\n\r\n            // After translate, animate smoothly into place from offset\r\n            setTimeout((node) => {\r\n                node.style.transitionProperty = 'all';\r\n                node.style[transformJSPropertyName] = '';\r\n                const animateDrop = e => {\r\n                    if (node.classList.contains('slip-dragging')) {\r\n                        node.classList.remove(this.options.draggingClassName);\r\n                        node.classList.remove('slip-dragging');\r\n                        node.classList.remove('slip-shadow');\r\n                        node.classList.add('slip-dropping');\r\n                    }\r\n                    else {\r\n                        node.removeEventListener(\"transitionend\", animateDrop, false);\r\n                        node.classList.remove('slip-dropping');\r\n                        node.style[transitionJSPropertyName] = '';\r\n                        if (callback) callback.call(this, target);\r\n                    }\r\n\r\n                }\r\n                node.addEventListener(\"transitionend\", animateDrop, false);\r\n            }, 0, node);\r\n        },\r\n    };\r\n\r\n    return Slip;\r\n})();\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slip from './slip';\r\nimport FlipMove from 'react-flip-move';\r\nimport './slip.css';\r\n\r\nexport default class extends Component {\r\n\r\n  static propTypes = {\r\n    children: PropTypes.array,\r\n    onMove: PropTypes.func,\r\n    onMoveStart: PropTypes.func,\r\n    disableMove: PropTypes.bool,\r\n    flipMoveProps: PropTypes.object,\r\n    elevateItem: PropTypes.bool,\r\n    style: PropTypes.object\r\n  };\r\n\r\n  static defaultProps = {\r\n    elevateItem: true\r\n  }\r\n\r\n  state = {\r\n    reordering: false\r\n  }\r\n  \r\n  handleBeforeReorder = e => {\r\n    if (this.props.disableMove) {\r\n        e.preventDefault();\r\n        return;\r\n    }\r\n    this.setState({reordering: true});\r\n    this.props.onMoveStart && this.props.onMoveStart();\r\n  }\r\n\r\n  handleReorder = e => {\r\n    const { originalIndex: oldIndex, spliceIndex: newIndex } = e.detail;\r\n    this.props.onMoveEnd && this.props.onMoveEnd({oldIndex, newIndex});\r\n    this.setState({reordering:false});\r\n  }\r\n\r\n  container = null;\r\n  init = node => {\r\n    this.container = node;\r\n    new Slip(this.container, { raised: this.props.elevateItem, draggingClassName: 'slipmove-dragging' });\r\n    this.container.addEventListener('slip:beforereorder', this.handleBeforeReorder);\r\n    this.container.addEventListener('slip:reorder', this.handleReorder);    \r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.container.removeEventListener('slip:beforereorder', this.handleBeforeReorder);\r\n    this.container.removeEventListener('slip:reorder', this.handleReorder);    \r\n  }\r\n\r\n  render() {\r\n    const { children, flipMoveProps, style = {} } = this.props;\r\n    /*\r\n        'Wrapperless' FlipMove is used here to pass container props down but it requires a\r\n        non static position => override if static or not defined (css defaults to static). \r\n        (FlipMove overrides it anyway but shows a console warning.)\r\n    */\r\n    if ((style.position || 'static') === 'static') style.position = 'relative'; \r\n    \r\n    return (\r\n        <div id=\"container\" ref={this.init} style={{...style}}>\r\n            <FlipMove typeName={null} { ...flipMoveProps } disableAllAnimations={this.state.reordering} >\r\n                {children}\r\n            </FlipMove>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component, PureComponent } from 'react';\r\nimport SlipMove from './SlipMove';\r\nimport './App.css';\r\nimport { move, shuffle, reverse } from './array';\r\n\r\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\r\n\r\nconst actions = {\r\n  reverse: ({ items }) => ({ items: reverse(items) }),\r\n  shuffle: ({ items }) => ({ items: shuffle(items) }),\r\n  move: (oldIndex, newIndex) => ({ items }) => ({ items: move(items, oldIndex, newIndex) }),\r\n}\r\n\r\nexport default class extends Component {\r\n\r\n  state = { items: generateItems(1000) }\r\n\r\n  move = ({ oldIndex, newIndex }) => this.setState(actions.move(oldIndex, newIndex));\r\n  reverse = () => this.setState(actions.reverse);\r\n  shuffle = () => this.setState(actions.shuffle);\r\n\r\n  render() {\r\n    const { items } = this.state;\r\n    return (\r\n      <div className=\"App\" >\r\n        <button onClick={this.reverse}>Reverse</button>\r\n        <button onClick={this.shuffle}>Shuffle</button>\r\n        <SlipMove onMoveEnd={this.move} flipMoveProps={{ appearAnimation: 'fade' }} >\r\n          {items.map(item => <ListItem key={item}>{item}</ListItem>)}\r\n        </SlipMove>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// FlipMove requires class compoonents as children\r\nclass ListItem extends PureComponent {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <div className=\"list-item\" >{children}</div>\r\n  }\r\n}\r\n","export const move = (arr, removeFrom=null, insertAt=null) => {\r\n    /*\r\n        Adds item if removeFrom is null\r\n        Removes item if insertAt is null\r\n    */\r\n    if (insertAt === removeFrom) return arr;\r\n    if (isNaN(Number(removeFrom) || isNaN(Number(insertAt)))) return arr;\r\n\r\n    let _arr = [...arr];\r\n\r\n    const item = (removeFrom !== null) ? _arr.splice(removeFrom, 1)[0] : null; \r\n    if (insertAt !== null) {\r\n        _arr.splice(insertAt, 0, item);\r\n    }\r\n\r\n    return _arr;\r\n  };\r\n    \r\nexport const shuffle = arr => arr\r\n    .map(a => [Math.random(), a])\r\n    .sort((a, b) => a[0] - b[0])\r\n    .map(a => a[1]);\r\n\r\nexport const reverse = arr => arr.slice().reverse();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}