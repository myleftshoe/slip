{"version":3,"sources":["slip.js","App.js","serviceWorker.js","index.js"],"names":["Slip","testElementStyle","document","createElement","style","transitionJSPropertyName","transformJSPropertyName","transformCSSPropertyName","userSelectJSPropertyName","container","querySelector","addEventListener","Error","this","window","cancel","setState","bind","states","idle","onTouchStart","onTouchMove","onTouchEnd","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onSelection","onContainerFocus","attach","getTransform","node","transform","value","original","getComputedStyle","getPropertyValue","prototype","state","target","usingTouch","mouseHandlersAttached","startPosition","latestPosition","previousPosition","canPreventScrolling","removeMouseHandlers","willChange","allowTextSelection","undecided","holdTimer","height","offsetHeight","dispatch","originalTarget","setTimeout","move","getAbsoluteMovement","x","y","reorder","leaveState","clearTimeout","onMove","onLeave","onEnd","allowDefault","focus","mouseOutsideTimer","nodes","childNodes","originalIndex","listCount","i","length","nodeType","findIndex","zero","offsetTop","otherNodes","t","push","baseTransform","pos","_this","requestAnimationFrame","updateScrolling","getTotalMovement","forEach","o","off","classList","add","zIndex","call","animateToZero","spliceIndex","insertBefore","detach","passive","capture","removeEventListener","newStateCtor","ctor","prevState","nextState","findTargetNode","targetNode","parentNode","e","stopPropagation","isRelated","iOS","test","navigator","userAgent","preventDefault","addMouseHandlers","documentElement","relatedTarget","button","setTarget","startAtPosition","clientX","clientY","time","timeStamp","touches","scrollContainer","body","scrollHeight","clientHeight","origScrollTop","scrollTop","origScrollHeight","updatePosition","scrollOffset","Math","abs","directionX","directionY","offset","scrollable","containerRect","getBoundingClientRect","targetRect","bottomOffset","min","bottom","innerHeight","topOffset","top","max","maxScrollTop","eventName","detail","event","createEvent","initCustomEvent","initEvent","dispatchEvent","callback","remove","fn","generateItems","Object","toConsumableArray","Array","keys","map","k","concat","App","items","reordering","setListRef","el","list","console","log","_e$detail","oldIndex","newIndex","reverse","react_default","a","className","onContextMenu","stopEvent","onClick","ref","react_flip_move_es","typeName","disableAllAnimations","item","App_ListItem","key","Component","ListItem","children","props","PureComponent","arr","result","splice","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAyEaA,EAAQ,WAGjB,IAAMC,EAAmBC,SAASC,cAAc,OAAOC,MAEjDC,EAA2B,eAAgBJ,EAAmB,aAAe,mBAC7EK,EAA0B,cAAeL,EAAmB,YAAc,kBAC1EM,EAAuD,oBAA5BD,EAAgD,oBAAsB,YACjGE,EAA2B,eAAgBP,EAAmB,aAAe,mBAEnF,SAASD,EAAKS,GAEV,GADI,kBAAoBA,IAAWA,EAAYP,SAASQ,cAAcD,KACjEA,IAAcA,EAAUE,iBAAkB,MAAM,IAAIC,MAAM,wCAE/D,IAAKC,MAAQA,OAASC,OAAQ,OAAO,IAAId,EAAKS,GAG9CI,KAAKE,OAASF,KAAKG,SAASC,KAAKJ,KAAMA,KAAKK,OAAOC,MACnDN,KAAKO,aAAeP,KAAKO,aAAaH,KAAKJ,MAC3CA,KAAKQ,YAAcR,KAAKQ,YAAYJ,KAAKJ,MACzCA,KAAKS,WAAaT,KAAKS,WAAWL,KAAKJ,MACvCA,KAAKU,YAAcV,KAAKU,YAAYN,KAAKJ,MACzCA,KAAKW,YAAcX,KAAKW,YAAYP,KAAKJ,MACzCA,KAAKY,UAAYZ,KAAKY,UAAUR,KAAKJ,MACrCA,KAAKa,aAAeb,KAAKa,aAAaT,KAAKJ,MAC3CA,KAAKc,YAAcd,KAAKc,YAAYV,KAAKJ,MACzCA,KAAKe,iBAAmBf,KAAKe,iBAAiBX,KAAKJ,MAEnDA,KAAKG,SAASH,KAAKK,OAAOC,MAC1BN,KAAKgB,OAAOpB,GAGhB,SAASqB,EAAaC,GAClB,IAAMC,EAAYD,EAAK3B,MAAME,GAC7B,GAAI0B,EACA,MAAO,CACHC,MAAOD,EACPE,SAAUF,GAIlB,GAAIlB,OAAOqB,iBAAkB,CACzB,IAAM/B,EAAQU,OAAOqB,iBAAiBJ,GAAMK,iBAAiB7B,GAC7D,GAAIH,GAAmB,SAAVA,EAAkB,MAAO,CAAC6B,MAAM7B,EAAO8B,SAAS,IAEjE,MAAO,CAACD,MAAM,GAAIC,SAAS,IAshB/B,OAlgBAlC,EAAKqC,UAAY,CAEb5B,UAAW,KACX6B,MAAO,KAEPC,OAAQ,KAERC,YAAY,EACZC,uBAAuB,EAEvBC,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAElBC,qBAAqB,EAErB3B,OAAQ,CACJC,KAAM,WAQF,OAPAN,KAAKiC,sBACDjC,KAAK0B,SACL1B,KAAK0B,OAAOR,KAAK3B,MAAM2C,WAAa,GACpClC,KAAK0B,OAAS,MAElB1B,KAAK2B,YAAa,EAEX,CACHQ,oBAAoB,IAI5BC,UAAW,WAKP,IAAIC,EAgBJ,OApBArC,KAAK0B,OAAOY,OAAStC,KAAK0B,OAAOR,KAAKqB,aACtCvC,KAAK0B,OAAOR,KAAK3B,MAAM2C,WAAaxC,EACpCM,KAAK0B,OAAOR,KAAK3B,MAAMC,GAA4B,GAG9CQ,KAAKwC,SAASxC,KAAK0B,OAAOe,eAAgB,cAK3CJ,EAAYK,WAAW,WACnB,IAAMC,EAAO3C,KAAK4C,sBACd5C,KAAKgC,qBAAuBW,EAAKE,EAAI,IAAMF,EAAKG,EAAI,IAChD9C,KAAKwC,SAASxC,KAAK0B,OAAOe,eAAgB,kBAC1CzC,KAAKG,SAASH,KAAKK,OAAO0C,UAGpC3C,KAAKJ,MAAO,KAXVA,KAAKwC,SAASxC,KAAK0B,OAAOe,eAAgB,kBAC1CzC,KAAKG,SAASH,KAAKK,OAAO0C,SAa3B,CACHC,WAAY,WACRC,aAAaZ,IAGjBa,OAAQ,WACJ,IAAMP,EAAO3C,KAAK4C,sBAOlB,GALID,EAAKG,EAAI,IACT9C,KAAKG,SAASH,KAAKK,OAAOC,MAI1BqC,EAAKE,EAAW,IAAPF,EAAKG,EAAO,OAAO,GAGpCK,QAAS,WACLnD,KAAKG,SAASH,KAAKK,OAAOC,OAG9B8C,MAAO,WACH,IAAMC,EAAerD,KAAKwC,SAASxC,KAAK0B,OAAOe,eAAgB,OAE/D,OADAzC,KAAKG,SAASH,KAAKK,OAAOC,MACnB+C,KAKnBN,QAAS,WACD/C,KAAK0B,OAAOR,KAAKoC,OACjBtD,KAAK0B,OAAOR,KAAKoC,QAGrBtD,KAAK0B,OAAOY,OAAStC,KAAK0B,OAAOR,KAAKqB,aAOtC,IALA,IAEIgB,EAFEC,EAAQxD,KAAKJ,UAAU6D,WACvBC,EAxGlB,SAAmBhC,EAAQ8B,GAIzB,IAHA,IAAIE,EAAgB,EAChBC,EAAY,EAEPC,EAAE,EAAGA,EAAIJ,EAAMK,OAAQD,IACJ,IAAtBJ,EAAMI,GAAGE,WACXH,IACIH,EAAMI,KAAOlC,EAAOR,OACtBwC,EAAgBC,EAAU,IAKhC,OAAOD,EA2FyBK,CAAU/D,KAAK0B,OAAQ8B,GAEvCQ,EAAOhE,KAAK0B,OAAOR,KAAK+C,UAAYjE,KAAK0B,OAAOY,OAAO,EACvD4B,EAAa,GACXN,EAAE,EAAGA,EAAIJ,EAAMK,OAAQD,IAC3B,GAA0B,IAAtBJ,EAAMI,GAAGE,UAAkBN,EAAMI,KAAO5D,KAAK0B,OAAOR,KAAxD,CACA,IAAMiD,EAAIX,EAAMI,GAAGK,UACnBT,EAAMI,GAAGrE,MAAMC,GAA4BE,EAA2B,oBAClEkE,EAAIF,IACJF,EAAMI,GAAGrE,MAAM2C,WAAaxC,GAChCwE,EAAWE,KAAK,CACZlD,KAAMsC,EAAMI,GACZS,cAAepD,EAAauC,EAAMI,IAClCU,IAAKH,GAAKA,EAAIH,EAAOR,EAAMI,GAAGrB,aAAe,GAAKyB,IAU1D,SAASd,IAAS,IAAAqB,EAAAvE,KA0Bd,OAxBAwE,sBAAsB,WAClBD,EAAKE,kBAEDlB,IAEAN,aAAaM,GAAoBA,EAAoB,MAGzD,IAAMZ,EAAO4B,EAAKG,mBAClBH,EAAK7C,OAAOR,KAAK3B,MAAME,GAA2B,eAAiBkD,EAAKG,EAAI,OAASyB,EAAK7C,OAAO2C,cAAcjD,MAE/G,IAAMkB,EAASiC,EAAK7C,OAAOY,OAAS,EACpC4B,EAAWS,QAAQ,SAASC,GACxB,IAAIC,EAAM,EACND,EAAEN,IAAM,GAAK3B,EAAKG,EAAI,GAAK8B,EAAEN,IAAM3B,EAAKG,EACxC+B,EAAMvC,EAEDsC,EAAEN,IAAM,GAAK3B,EAAKG,EAAI,GAAK8B,EAAEN,IAAM3B,EAAKG,IAC7C+B,GAAOvC,GAGXsC,EAAE1D,KAAK3B,MAAME,GAA2BoF,EAAM,eAAeA,EAAI,OAASD,EAAEP,cAAcjD,MAAQwD,EAAEP,cAAchD,cAGnH,EAKX,OAnCArB,KAAK0B,OAAOR,KAAK4D,UAAUC,IAAI,mBAC/B/E,KAAK0B,OAAOR,KAAK3B,MAAMyF,OAAS,QAChChF,KAAK0B,OAAOR,KAAK3B,MAAMI,GAA4B,OA+BnDuD,EAAO+B,KAAKjF,MAEL,CACHgD,WAAY,WACJO,GAAmBN,aAAaM,GAEhCvD,KAAKJ,UAAU0D,OACftD,KAAKJ,UAAU0D,QAInBtD,KAAK0B,OAAOR,KAAK3B,MAAMI,GAA4B,GAEnDK,KAAKkF,cAAc,SAASxD,GACxBA,EAAOR,KAAK3B,MAAMyF,OAAS,KAE/Bd,EAAWS,QAAQ,SAASC,GACxBA,EAAE1D,KAAK3B,MAAME,GAA2BmF,EAAEP,cAAchD,SACxDuD,EAAE1D,KAAK3B,MAAM2C,WAAa,KAC1B0C,EAAE1D,KAAK3B,MAAMC,GAA4B,MAIjD0D,OAAQA,EAERC,QAAS,WAGDI,GAAmBN,aAAaM,GACpCA,EAAoBb,WAAW,WAC3Ba,EAAoB,KACpBvD,KAAKE,UACPE,KAAKJ,MAAO,MAGlBoD,MAAO,WACH,IACIQ,EAAGuB,EADDxC,EAAO3C,KAAK0E,mBAElB,GAAI/B,EAAKG,EAAI,EAAG,CACZ,IAAKc,EAAE,EAAGA,EAAIM,EAAWL,UACjBK,EAAWN,GAAGU,IAAM3B,EAAKG,GADAc,KAKjCuB,EAAcvB,MACX,CACH,IAAKA,EAAEM,EAAWL,OAAO,EAAGD,GAAK,KACzBM,EAAWN,GAAGU,IAAM3B,EAAKG,GADGc,KAKpCuB,EAAcvB,EAAE,EAUpB,OAPA5D,KAAKwC,SAASxC,KAAK0B,OAAOR,KAAM,UAAW,CACvCiE,YAAaA,EACbzB,cAAeA,EACf0B,aAAclB,EAAWiB,GAAejB,EAAWiB,GAAajE,KAAO,OAG3ElB,KAAKG,SAASH,KAAKK,OAAOC,OACnB,MAMvBU,OAAQ,SAASpB,GACTI,KAAKJ,WAAWI,KAAKqF,SAEzBrF,KAAKJ,UAAYA,EAEjBI,KAAKJ,UAAUE,iBAAiB,QAASE,KAAKe,iBAAkB,CAACuE,SAAQ,EAAMC,SAAS,IAExFvF,KAAKkE,WAAa,GAGlB7E,SAASS,iBAAiB,kBAAmBE,KAAKc,YAAa,CAACwE,SAAQ,EAAOC,SAAS,IAGxFvF,KAAKJ,UAAUE,iBAAiB,cAAeE,KAAKE,OAAQ,CAACoF,SAAQ,EAAMC,SAAS,IACpFvF,KAAKJ,UAAUE,iBAAiB,aAAcE,KAAKO,aAAc,CAAC+E,SAAQ,EAAMC,SAAS,IACzFvF,KAAKJ,UAAUE,iBAAiB,YAAaE,KAAKQ,YAAa,CAAC8E,SAAQ,EAAOC,SAAS,IACxFvF,KAAKJ,UAAUE,iBAAiB,WAAYE,KAAKS,WAAY,CAAC6E,SAAQ,EAAOC,SAAS,IACtFvF,KAAKJ,UAAUE,iBAAiB,YAAaE,KAAKU,YAAa,CAAC4E,SAAQ,EAAMC,SAAS,KAI3FF,OAAQ,WACJrF,KAAKE,SAELF,KAAKJ,UAAU4F,oBAAoB,YAAaxF,KAAKU,YAAa,CAAC4E,SAAQ,EAAMC,SAAS,IAC1FvF,KAAKJ,UAAU4F,oBAAoB,WAAYxF,KAAKS,WAAY,CAAC6E,SAAQ,EAAOC,SAAS,IACzFvF,KAAKJ,UAAU4F,oBAAoB,YAAaxF,KAAKQ,YAAa,CAAC8E,SAAQ,EAAOC,SAAS,IAC3FvF,KAAKJ,UAAU4F,oBAAoB,aAAcxF,KAAKO,aAAc,CAAC+E,SAAQ,EAAMC,SAAS,IAC5FvF,KAAKJ,UAAU4F,oBAAoB,cAAexF,KAAKE,OAAQ,CAACoF,SAAQ,EAAMC,SAAS,IAEvFlG,SAASmG,oBAAoB,kBAAmBxF,KAAKc,YAAa,CAACwE,SAAQ,EAAOC,SAAS,KAI/FpF,SAAU,SAASsF,GACf,GAAIzF,KAAKyB,MAAO,CACZ,GAAIzB,KAAKyB,MAAMiE,OAASD,EAAc,OAClCzF,KAAKyB,MAAMuB,YAAYhD,KAAKyB,MAAMuB,WAAWiC,KAAKjF,MAI1D,IAAM2F,EAAY3F,KAAKyB,MACnBmE,EAAYH,EAAaR,KAAKjF,MAC9BA,KAAKyB,QAAUkE,IACfC,EAAUF,KAAOD,EACjBzF,KAAKyB,MAAQmE,IAIrBC,eAAgB,SAASC,GACrB,KAAMA,GAAcA,EAAWC,aAAe/F,KAAKJ,WAC/CkG,EAAaA,EAAWC,WAE5B,OAAOD,GAGX/E,iBAAkB,SAASiF,GACvBA,EAAEC,mBAGNnF,YAAa,SAASkF,GAClBA,EAAEC,kBACF,IAAMC,EAAYF,EAAEtE,SAAWrC,UAAYW,KAAK6F,eAAeG,GACzDG,EAAM,sBAAsBC,KAAKC,UAAUC,aAAe,qBAAqBF,KAAKC,UAAUC,WAC/FJ,IAEDC,EAEAnG,KAAKG,SAASH,KAAKK,OAAOC,MAErBN,KAAKyB,MAAMU,oBACZ6D,EAAEO,mBAKdC,iBAAkB,WAGTxG,KAAK4B,wBACN5B,KAAK4B,uBAAwB,EAC7BvC,SAASoH,gBAAgB3G,iBAAiB,aAAcE,KAAKa,aAAc,CAACyE,SAAQ,EAAMC,SAAS,IACnGtF,OAAOH,iBAAiB,YAAaE,KAAKW,YAAa,CAAC2E,SAAQ,EAAOC,SAAS,IAChFtF,OAAOH,iBAAiB,UAAWE,KAAKY,UAAW,CAAC0E,SAAQ,EAAOC,SAAS,IAC5EtF,OAAOH,iBAAiB,OAAQE,KAAKE,OAAQ,CAACoF,SAAQ,EAAMC,SAAS,MAI7EtD,oBAAqB,WACbjC,KAAK4B,wBACL5B,KAAK4B,uBAAwB,EAC7BvC,SAASoH,gBAAgBjB,oBAAoB,aAAcxF,KAAKa,aAAc,CAACyE,SAAQ,EAAMC,SAAS,IACtGtF,OAAOuF,oBAAoB,YAAaxF,KAAKW,YAAa,CAAC2E,SAAQ,EAAOC,SAAS,IACnFtF,OAAOuF,oBAAoB,UAAWxF,KAAKY,UAAW,CAAC0E,SAAQ,EAAOC,SAAS,IAC/EtF,OAAOuF,oBAAoB,OAAQxF,KAAKE,OAAQ,CAACoF,SAAQ,EAAMC,SAAS,MAIhF1E,aAAc,SAASmF,GACnBA,EAAEC,kBACEjG,KAAK2B,YAELqE,EAAEtE,SAAWrC,SAASoH,iBAAmBT,EAAEU,gBAAkBrH,SAASoH,iBAClEzG,KAAKyB,MAAM0B,SACXnD,KAAKyB,MAAM0B,QAAQ8B,KAAKjF,OAKpCU,YAAa,SAASsF,GAClBA,EAAEC,mBACEjG,KAAK2B,YAA2B,IAAbqE,EAAEW,QAAiB3G,KAAK4G,UAAUZ,KAEzDhG,KAAKwG,mBAELxG,KAAKgC,qBAAsB,EAE3BhC,KAAK6G,gBAAgB,CACjBhE,EAAGmD,EAAEc,QACLhE,EAAGkD,EAAEe,QACLC,KAAMhB,EAAEiB,cAIhB1G,aAAc,SAASyF,GACnBA,EAAEC,kBACFjG,KAAK2B,YAAa,EAClB3B,KAAKgC,qBAAsB,EAGvBgE,EAAEkB,QAAQrD,OAAS,EACnB7D,KAAKG,SAASH,KAAKK,OAAOC,MAIzBN,KAAK4G,UAAUZ,IAEpBhG,KAAK6G,gBAAgB,CACjBhE,EAAGmD,EAAEkB,QAAQ,GAAGJ,QAChBhE,EAAGkD,EAAEkB,QAAQ,GAAGH,QAChBC,KAAMhB,EAAEiB,aAIhBL,UAAW,SAASZ,GAChB,IAAMF,EAAa9F,KAAK6F,eAAeG,EAAEtE,QACzC,IAAKoE,EAED,OADA9F,KAAKG,SAASH,KAAKK,OAAOC,OACnB,EAKX,IADA,IAAI6G,EAAkBrB,EAAWC,WAC1BoB,GACCA,IAAoB9H,SAAS+H,QAC7BD,EAAgBE,aAAeF,EAAgBG,cAA2E,YAA3DrH,OAAOqB,iBAAiB6F,GAAiB,gBAC5GA,EAAkBA,EAAgBpB,WAYtC,OAVAoB,EAAkBA,GAAmB9H,SAAS+H,KAE9CpH,KAAK0B,OAAS,CACVe,eAAgBuD,EAAEtE,OAClBR,KAAM4E,EACNqB,gBAAiBA,EACjBI,cAAeJ,EAAgBK,UAC/BC,iBAAkBN,EAAgBE,aAClChD,cAAepD,EAAa6E,KAEzB,GAGXe,gBAAiB,SAASvC,GACtBtE,KAAK6B,cAAgB7B,KAAK+B,iBAAmB/B,KAAK8B,eAAiBwC,EACnEtE,KAAKG,SAASH,KAAKK,OAAO+B,YAG9BsF,eAAgB,SAAS1B,EAAG1B,GACL,MAAftE,KAAK0B,SAGT1B,KAAK8B,eAAiBwC,EAElBtE,KAAKyB,MAAMyB,SAC0B,IAAjClD,KAAKyB,MAAMyB,OAAO+B,KAAKjF,OACvBgG,EAAEO,iBAKNvG,KAAK8B,eAAekF,KAAOhH,KAAK+B,iBAAiBiF,KAAO,MACxDhH,KAAK+B,iBAAmB/B,KAAK8B,kBAIrCnB,YAAa,SAASqF,GAClBA,EAAEC,kBACFjG,KAAK0H,eAAe1B,EAAG,CACnBnD,EAAGmD,EAAEc,QACLhE,EAAGkD,EAAEe,QACLC,KAAMhB,EAAEiB,aAIhBzG,YAAa,SAASwF,GAClBA,EAAEC,kBACFjG,KAAK0H,eAAe1B,EAAG,CACnBnD,EAAGmD,EAAEkB,QAAQ,GAAGJ,QAChBhE,EAAGkD,EAAEkB,QAAQ,GAAGH,QAChBC,KAAMhB,EAAEiB,YAIZjH,KAAKgC,qBAAsB,GAG/BpB,UAAW,SAASoF,GAChBA,EAAEC,kBACEjG,KAAK2B,YAA2B,IAAbqE,EAAEW,QAErB3G,KAAKyB,MAAM2B,QAAS,IAAUpD,KAAKyB,MAAM2B,MAAM6B,KAAKjF,OACpDgG,EAAEO,kBAIV9F,WAAY,SAASuF,GACjBA,EAAEC,kBACED,EAAEkB,QAAQrD,OAAS,EACnB7D,KAAKE,SACEF,KAAKyB,MAAM2B,QAAS,IAAUpD,KAAKyB,MAAM2B,MAAM6B,KAAKjF,OAC3DgG,EAAEO,kBAIV7B,iBAAkB,WACd,IAAMiD,EAAe3H,KAAK0B,OAAOyF,gBAAgBK,UAAYxH,KAAK0B,OAAO6F,cACzE,MAAO,CACH1E,EAAG7C,KAAK8B,eAAee,EAAI7C,KAAK6B,cAAcgB,EAC9CC,EAAG9C,KAAK8B,eAAegB,EAAI9C,KAAK6B,cAAciB,EAAI6E,EAClDX,KAAMhH,KAAK8B,eAAekF,KAAOhH,KAAK6B,cAAcmF,OAI5DpE,oBAAqB,WACjB,IAAMD,EAAO3C,KAAK0E,mBAClB,MAAO,CACH7B,EAAG+E,KAAKC,IAAIlF,EAAKE,GACjBC,EAAG8E,KAAKC,IAAIlF,EAAKG,GACjBkE,KAAMrE,EAAKqE,KACXc,WAAYnF,EAAKE,EAAI,EAAI,OAAS,QAClCkF,WAAYpF,EAAKG,EAAI,EAAI,KAAO,SAIxC2B,gBAAiB,WACb,IACIuD,EAAS,EAEPC,EAAajI,KAAK0B,OAAOyF,gBAC3Be,EAAgBD,EAAWE,wBAC3BC,EAAapI,KAAK0B,OAAOR,KAAKiH,wBAC9BE,EAAeT,KAAKU,IAAIJ,EAAcK,OAAQtI,OAAOuI,aAAeJ,EAAWG,OAC/EE,EAAYL,EAAWM,IAAMd,KAAKe,IAAIT,EAAcQ,IAAK,GACzDE,EAAe5I,KAAK0B,OAAO+F,iBAAmBG,KAAKU,IAAIL,EAAWX,aAAcrH,OAAOuI,aAEvFH,EAVgB,GAWlBL,EAASJ,KAAKU,IAXI,MAW+BD,GAE1CI,EAbW,KAclBT,EAASJ,KAAKe,KAdI,GAcgBF,EAdhB,KAiBpBR,EAAWT,UAAYI,KAAKe,IAAI,EAAGf,KAAKU,IAAIM,EAAcX,EAAWT,UAAYQ,KAGrFxF,SAAU,SAASsD,EAAY+C,EAAWC,GACtC,IAAIC,EAAQ1J,SAAS2J,YAAY,eAQjC,OAPID,GAASA,EAAME,gBACfF,EAAME,gBAAgB,QAAUJ,GAAW,GAAM,EAAMC,KAEvDC,EAAQ1J,SAAS2J,YAAY,UACvBE,UAAU,QAAUL,GAAW,GAAM,GAC3CE,EAAMD,OAASA,GAEZhD,EAAWqD,cAAcJ,IAGpC7D,cAAe,SAASkE,EAAU1H,IAE9BA,EAASA,GAAU1B,KAAK0B,QAIjBR,KAAK3B,MAAME,GAA2B,kBAAoBiC,EAAO2C,cAAcjD,MACtFsB,WAAW,WACPhB,EAAOR,KAAK3B,MAAMC,GAA4B,GAC9CkC,EAAOR,KAAK3B,MAAME,GAA2BiC,EAAO2C,cAAchD,SAClEK,EAAOR,KAAK4D,UAAUuE,OAAO,mBAC7B3H,EAAOR,KAAK4D,UAAUC,IAAI,kBAK1BrD,EAAOR,KAAKpB,iBAAiB,gBAJlB,SAALwJ,EAAKtD,GACPtE,EAAOR,KAAK4D,UAAUuE,OAAO,kBAC7B3H,EAAOR,KAAKsE,oBAAoB,gBAAiB8D,GAAI,KAEP,GAC9CF,GAAUA,EAASnE,KAAKjF,KAAM0B,IACpCtB,KAAKJ,MAAO,OAIfb,EAnkBU,UCpEfoK,SAAgB,SAAA1F,GAAM,OAAI2F,OAAAC,EAAA,EAAAD,CAAIE,MAAM7F,GAAQ8F,QAAQC,IAAI,SAAAC,GAAC,cAAAC,OAAYD,OAErEE,6MAEJtI,MAAQ,CACNuI,MAAOT,EAAc,IACrBU,YAAY,KAGdC,WAAa,SAAAC,GACX5F,EAAK6F,KAAOD,EACZE,QAAQC,IAAI/F,EAAK6F,MACjB,IAAIjL,EAAKoF,EAAK6F,MACd7F,EAAK6F,KAAKtK,iBAAiB,eAAgB,SAAAkG,GACzCqE,QAAQC,IAAItE,GADkC,IAAAuE,EAEavE,EAAE8C,OAAtC0B,EAFuBD,EAEtC7G,cAAsC+G,EAFAF,EAEbpF,YAC3B6E,EAAQjH,EAAQwB,EAAK9C,MAAMuI,MAAOQ,EAAUC,GAClDlG,EAAKpE,SAAS,CAAC6J,QAAOC,YAAW,MAEnC1F,EAAK6F,KAAKtK,iBAAiB,qBAAsB,SAAAkG,GAC/CzB,EAAKpE,SAAS,CAAC8J,YAAY,SAI/BS,QAAU,WACRnG,EAAKpE,SAAS,CAAC6J,MAAOR,OAAAC,EAAA,EAAAD,CAAIjF,EAAK9C,MAAMuI,OAAOU,qFAGrC,IACCV,EAAUhK,KAAKyB,MAAfuI,MACR,OACEW,EAAAC,EAAAtL,cAAA,OAAKuL,UAAU,MAAMC,cAAeC,GAClCJ,EAAAC,EAAAtL,cAAA,UAAQ0L,QAAShL,KAAK0K,SAAtB,WACAC,EAAAC,EAAAtL,cAAA,OAAKuL,UAAU,sBAAsBI,IAAKjL,KAAKkK,YAC7CS,EAAAC,EAAAtL,cAAC4L,EAAA,EAAD,CAAUC,SAAU,KAAMC,qBAAsBpL,KAAKyB,MAAMwI,YACxDD,EAAMJ,IAAI,SAAAyB,GAAI,OAAIV,EAAAC,EAAAtL,cAACgM,EAAD,CAAUC,IAAKF,GAAOA,eAjCnCG,aA2CZC,mLACK,IACCC,EAAa1L,KAAK2L,MAAlBD,SACR,OAAOf,EAAAC,EAAAtL,cAAA,OAAKuL,UAAU,kBAAmBa,UAHtBE,iBAQjBb,EAAY,SAAA/E,GAChBqE,QAAQC,IAAI,iBAAkBtE,GAC9BA,EAAEO,iBACFP,EAAEC,mBAGElD,EAAU,SAAC8I,EAAKrB,EAAUC,GAC9B,GAAiB,OAAbD,GAAkC,OAAbC,EAAmB,OAAOoB,EAEnD,IAAMC,EAAMtC,OAAAC,EAAA,EAAAD,CAAOqC,GACfR,EAAO,KAUX,OARiB,OAAbb,IACAa,EAAOS,EAAOC,OAAOvB,EAAU,GAAG,IAGrB,OAAbC,GACAqB,EAAOC,OAAOtB,EAAU,EAAGY,GAGxBS,GAGM/B,ICrEKiC,QACW,cAA7B/L,OAAOgM,SAASC,UAEe,UAA7BjM,OAAOgM,SAASC,UAEhBjM,OAAOgM,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO1B,EAAAC,EAAAtL,cAACgN,EAAD,MAASjN,SAASkN,eAAe,SDqH3C,kBAAmBlG,WACrBA,UAAUmG,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3d9e9acf.chunk.js","sourcesContent":["/*\r\n    Slip - swiping and reordering in lists of elements on touch screens, no fuss.\r\n\r\n    Fires these events on list elements:\r\n\r\n        • slip:reorder\r\n            Element has been dropped in new location. event.detail contains the following:\r\n                • insertBefore: DOM node before which element has been dropped (null is the end of the list). Use with node.insertBefore().\r\n                • spliceIndex: Index of element before which current element has been dropped, not counting the element iself.\r\n                               For use with Array.splice() if the list is reflecting objects in some array.\r\n                • originalIndex: The original index of the element before it was reordered.\r\n\r\n        • slip:beforereorder\r\n            When reordering movement starts.\r\n            Element being reordered gets class `slip-reordering`.\r\n            If you execute event.preventDefault() then the element will not move at all.\r\n\r\n        • slip:beforewait\r\n            If you execute event.preventDefault() then reordering will begin immediately, blocking ability to scroll the page.\r\n\r\n        • slip:tap\r\n            When element was tapped without being swiped/reordered. You can check `event.target` to limit that behavior to drag handles.\r\n\r\n\r\n    Usage:\r\n\r\n        CSS:\r\n            You should set `user-select:none` (and WebKit prefixes, sigh) on list elements,\r\n            otherwise unstoppable and glitchy text selection in iOS will get in the way.\r\n\r\n        list.addEventListener('slip:beforereorder', function(e) {\r\n            if (shouldNotReorder(e.target)) e.preventDefault();\r\n        });\r\n\r\n        list.addEventListener('slip:reorder', function(e) {\r\n            // e.target reordered.\r\n            if (reorderedOK) {\r\n                e.target.parentNode.insertBefore(e.target, e.detail.insertBefore);\r\n            } else {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n\r\n    Requires:\r\n        • Touch events\r\n        • CSS transforms\r\n        • Function.bind()\r\n\r\n    Caveats:\r\n        • Elements must not change size while reordering or swiping takes place (otherwise it will be visually out of sync)\r\n*/\r\n/*! @license\r\n    Slip.js 1.2.0\r\n\r\n    © 2014 Kornel Lesiński <kornel@geekhood.net>. All rights reserved.\r\n\r\n    Redistribution and use in source and binary forms, with or without modification,\r\n    are permitted provided that the following conditions are met:\r\n\r\n    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n\r\n    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and\r\n       the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\n    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n    INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n    SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n    SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n    USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nexport const Slip = (function(){\r\n\r\n    // -webkit-mess\r\n    const testElementStyle = document.createElement('div').style;\r\n\r\n    const transitionJSPropertyName = \"transition\" in testElementStyle ? \"transition\" : \"webkitTransition\";\r\n    const transformJSPropertyName = \"transform\" in testElementStyle ? \"transform\" : \"webkitTransform\";\r\n    const transformCSSPropertyName = transformJSPropertyName === \"webkitTransform\" ? \"-webkit-transform\" : \"transform\";\r\n    const userSelectJSPropertyName = \"userSelect\" in testElementStyle ? \"userSelect\" : \"webkitUserSelect\";\r\n\r\n    function Slip(container) {\r\n        if ('string' === typeof container) container = document.querySelector(container);\r\n        if (!container || !container.addEventListener) throw new Error(\"Please specify DOM node to attach to\");\r\n\r\n        if (!this || this === window) return new Slip(container);\r\n\r\n        // Functions used for as event handlers need usable `this` and must not change to be removable\r\n        this.cancel = this.setState.bind(this, this.states.idle);\r\n        this.onTouchStart = this.onTouchStart.bind(this);\r\n        this.onTouchMove = this.onTouchMove.bind(this);\r\n        this.onTouchEnd = this.onTouchEnd.bind(this);\r\n        this.onMouseDown = this.onMouseDown.bind(this);\r\n        this.onMouseMove = this.onMouseMove.bind(this);\r\n        this.onMouseUp = this.onMouseUp.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.onSelection = this.onSelection.bind(this);\r\n        this.onContainerFocus = this.onContainerFocus.bind(this);\r\n\r\n        this.setState(this.states.idle);\r\n        this.attach(container);\r\n    }\r\n\r\n    function getTransform(node) {\r\n        const transform = node.style[transformJSPropertyName];\r\n        if (transform) {\r\n            return {\r\n                value: transform,\r\n                original: transform,\r\n            };\r\n        }\r\n\r\n        if (window.getComputedStyle) {\r\n            const style = window.getComputedStyle(node).getPropertyValue(transformCSSPropertyName);\r\n            if (style && style !== 'none') return {value:style, original:''};\r\n        }\r\n        return {value:'', original:''};\r\n    }\r\n\r\n    function findIndex(target, nodes) {\r\n      let originalIndex = 0;\r\n      let listCount = 0;\r\n\r\n      for (let i=0; i < nodes.length; i++) {\r\n        if (nodes[i].nodeType === 1) {\r\n          listCount++;\r\n          if (nodes[i] === target.node) {\r\n            originalIndex = listCount-1;\r\n          }\r\n        }\r\n      }\r\n\r\n      return originalIndex;\r\n    }\r\n\r\n    // All functions in states are going to be executed in context of Slip object\r\n    Slip.prototype = {\r\n\r\n        container: null,\r\n        state: null,\r\n\r\n        target: null, // the tapped/swiped/reordered node with height and backed up styles\r\n\r\n        usingTouch: false, // there's no good way to detect touchscreen preference other than receiving a touch event (really, trust me).\r\n        mouseHandlersAttached: false,\r\n\r\n        startPosition: null, // x,y,time where first touch began\r\n        latestPosition: null, // x,y,time where the finger is currently\r\n        previousPosition: null, // x,y,time where the finger was ~100ms ago (for velocity calculation)\r\n\r\n        canPreventScrolling: false,\r\n\r\n        states: {\r\n            idle: function idleStateInit() {\r\n                this.removeMouseHandlers();\r\n                if (this.target) {\r\n                    this.target.node.style.willChange = '';\r\n                    this.target = null;\r\n                }\r\n                this.usingTouch = false;\r\n\r\n                return {\r\n                    allowTextSelection: true,\r\n                };\r\n            },\r\n\r\n            undecided: function undecidedStateInit() {\r\n                this.target.height = this.target.node.offsetHeight;\r\n                this.target.node.style.willChange = transformCSSPropertyName;\r\n                this.target.node.style[transitionJSPropertyName] = '';\r\n                \r\n                let holdTimer;\r\n                if (!this.dispatch(this.target.originalTarget, 'beforewait')) {\r\n                    if (this.dispatch(this.target.originalTarget, 'beforereorder')) {\r\n                        this.setState(this.states.reorder);\r\n                    }\r\n                } else {\r\n                    holdTimer = setTimeout(function(){\r\n                        const move = this.getAbsoluteMovement();\r\n                        if (this.canPreventScrolling && move.x < 15 && move.y < 25) {\r\n                            if (this.dispatch(this.target.originalTarget, 'beforereorder')) {\r\n                                this.setState(this.states.reorder);\r\n                            }\r\n                        }\r\n                    }.bind(this), 300);\r\n                }\r\n\r\n                return {\r\n                    leaveState: function() {\r\n                        clearTimeout(holdTimer);\r\n                    },\r\n\r\n                    onMove: function() {\r\n                        const move = this.getAbsoluteMovement();\r\n\r\n                        if (move.y > 20) {\r\n                            this.setState(this.states.idle);\r\n                        }\r\n\r\n                        // Chrome likes sideways scrolling :(\r\n                        if (move.x > move.y*1.2) return false;\r\n                    },\r\n\r\n                    onLeave: function() {\r\n                        this.setState(this.states.idle);\r\n                    },\r\n\r\n                    onEnd: function() {\r\n                        const allowDefault = this.dispatch(this.target.originalTarget, 'tap');\r\n                        this.setState(this.states.idle);\r\n                        return allowDefault;\r\n                    },\r\n                };\r\n            },\r\n\r\n            reorder: function reorderStateInit() {\r\n                if (this.target.node.focus) {\r\n                    this.target.node.focus();\r\n                }\r\n\r\n                this.target.height = this.target.node.offsetHeight;\r\n\r\n                const nodes = this.container.childNodes;\r\n                const originalIndex = findIndex(this.target, nodes);\r\n                let mouseOutsideTimer;\r\n                const zero = this.target.node.offsetTop + this.target.height/2;\r\n                const otherNodes = [];\r\n                for(let i=0; i < nodes.length; i++) {\r\n                    if (nodes[i].nodeType !== 1 || nodes[i] === this.target.node) continue;\r\n                    const t = nodes[i].offsetTop;\r\n                    nodes[i].style[transitionJSPropertyName] = transformCSSPropertyName + ' 0.2s ease-in-out';\r\n                    if (i > originalIndex)\r\n                        nodes[i].style.willChange = transformCSSPropertyName; \r\n                    otherNodes.push({\r\n                        node: nodes[i],\r\n                        baseTransform: getTransform(nodes[i]),\r\n                        pos: t + (t < zero ? nodes[i].offsetHeight : 0) - zero,\r\n                    });\r\n                }\r\n                // const nodesArray = Array.prototype.slice.call(nodes);\r\n                // console.log(nodesArray.map(n => n.style.willChange));\r\n\r\n                this.target.node.classList.add('slip-reordering');\r\n                this.target.node.style.zIndex = '99999';\r\n                this.target.node.style[userSelectJSPropertyName] = 'none';\r\n\r\n                function onMove() {\r\n                    /*jshint validthis:true */\r\n                    requestAnimationFrame(() => {\r\n                        this.updateScrolling();\r\n\r\n                        if (mouseOutsideTimer) {\r\n                            // don't care where the mouse is as long as it moves\r\n                            clearTimeout(mouseOutsideTimer); mouseOutsideTimer = null;\r\n                        }\r\n\r\n                        const move = this.getTotalMovement();\r\n                        this.target.node.style[transformJSPropertyName] = 'translate(0,' + move.y + 'px) ' + this.target.baseTransform.value;\r\n\r\n                        const height = this.target.height + 2; // +2 for margin\r\n                        otherNodes.forEach(function(o){\r\n                            let off = 0;\r\n                            if (o.pos < 0 && move.y < 0 && o.pos > move.y) {\r\n                                off = height;\r\n                            }\r\n                            else if (o.pos > 0 && move.y > 0 && o.pos < move.y) {\r\n                                off = -height;\r\n                            }\r\n                            // FIXME: should change accelerated/non-accelerated state lazily\r\n                            o.node.style[transformJSPropertyName] = off ? 'translate(0,'+off+'px) ' + o.baseTransform.value : o.baseTransform.original;\r\n                        });\r\n                    });\r\n                    return false;\r\n                }\r\n\r\n                onMove.call(this);\r\n\r\n                return {\r\n                    leaveState: function() {\r\n                        if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer);\r\n\r\n                        if (this.container.focus) {\r\n                            this.container.focus();\r\n                        }\r\n\r\n                        // this.target.node.classList.remove('slip-reordering');\r\n                        this.target.node.style[userSelectJSPropertyName] = '';\r\n\r\n                        this.animateToZero(function(target){\r\n                            target.node.style.zIndex = '';\r\n                        });\r\n                        otherNodes.forEach(function(o){\r\n                            o.node.style[transformJSPropertyName] = o.baseTransform.original;\r\n                            o.node.style.willChange = null;\r\n                            o.node.style[transitionJSPropertyName] = ''; // FIXME: animate to new position\r\n                        });\r\n                    },\r\n\r\n                    onMove: onMove,\r\n\r\n                    onLeave: function() {\r\n                        // don't let element get stuck if mouse left the window\r\n                        // but don't cancel immediately as it'd be annoying near window edges\r\n                        if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer);\r\n                        mouseOutsideTimer = setTimeout(function(){\r\n                            mouseOutsideTimer = null;\r\n                            this.cancel();\r\n                        }.bind(this), 700);\r\n                    },\r\n\r\n                    onEnd: function() {\r\n                        const move = this.getTotalMovement();\r\n                        let i, spliceIndex;\r\n                        if (move.y < 0) {\r\n                            for (i=0; i < otherNodes.length; i++) {\r\n                                if (otherNodes[i].pos > move.y) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            spliceIndex = i;\r\n                        } else {\r\n                            for (i=otherNodes.length-1; i >= 0; i--) {\r\n                                if (otherNodes[i].pos < move.y) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            spliceIndex = i+1;\r\n                        }\r\n\r\n                        this.dispatch(this.target.node, 'reorder', {\r\n                            spliceIndex: spliceIndex,\r\n                            originalIndex: originalIndex,\r\n                            insertBefore: otherNodes[spliceIndex] ? otherNodes[spliceIndex].node : null,\r\n                        });\r\n\r\n                        this.setState(this.states.idle);\r\n                        return false;\r\n                    },\r\n                };\r\n            },\r\n        },\r\n\r\n        attach: function(container) {\r\n            if (this.container) this.detach();\r\n\r\n            this.container = container;\r\n\r\n            this.container.addEventListener('focus', this.onContainerFocus, {passive:true, capture: false});\r\n\r\n            this.otherNodes = [];\r\n\r\n            // selection on iOS interferes with reordering\r\n            document.addEventListener(\"selectionchange\", this.onSelection, {passive:false, capture: false});\r\n\r\n            // cancel is called e.g. when iOS detects multitasking gesture\r\n            this.container.addEventListener('touchcancel', this.cancel, {passive:true, capture: false});\r\n            this.container.addEventListener('touchstart', this.onTouchStart, {passive:true, capture: false});\r\n            this.container.addEventListener('touchmove', this.onTouchMove, {passive:false, capture: false});\r\n            this.container.addEventListener('touchend', this.onTouchEnd, {passive:false, capture: false});\r\n            this.container.addEventListener('mousedown', this.onMouseDown, {passive:true, capture: false});\r\n            // mousemove and mouseup are attached dynamically\r\n        },\r\n\r\n        detach: function() {\r\n            this.cancel();\r\n\r\n            this.container.removeEventListener('mousedown', this.onMouseDown, {passive:true, capture: false});\r\n            this.container.removeEventListener('touchend', this.onTouchEnd, {passive:false, capture: false});\r\n            this.container.removeEventListener('touchmove', this.onTouchMove, {passive:false, capture: false});\r\n            this.container.removeEventListener('touchstart', this.onTouchStart, {passive:true, capture: false});\r\n            this.container.removeEventListener('touchcancel', this.cancel, {passive:true, capture: false});\r\n\r\n            document.removeEventListener(\"selectionchange\", this.onSelection, {passive:false, capture: false});\r\n\r\n        },\r\n\r\n        setState: function(newStateCtor){\r\n            if (this.state) {\r\n                if (this.state.ctor === newStateCtor) return;\r\n                if (this.state.leaveState) this.state.leaveState.call(this);\r\n            }\r\n\r\n            // Must be re-entrant in case ctor changes state\r\n            const prevState = this.state;\r\n            let nextState = newStateCtor.call(this);\r\n            if (this.state === prevState) {\r\n                nextState.ctor = newStateCtor;\r\n                this.state = nextState;\r\n            }\r\n        },\r\n\r\n        findTargetNode: function(targetNode) {\r\n            while(targetNode && targetNode.parentNode !== this.container) {\r\n                targetNode = targetNode.parentNode;\r\n            }\r\n            return targetNode;\r\n        },\r\n\r\n        onContainerFocus: function(e) {\r\n            e.stopPropagation();\r\n        },\r\n\r\n        onSelection: function(e) {\r\n            e.stopPropagation();\r\n            const isRelated = e.target === document || this.findTargetNode(e);\r\n            const iOS = /(iPhone|iPad|iPod)/i.test(navigator.userAgent) && !/(Android|Windows)/i.test(navigator.userAgent);\r\n            if (!isRelated) return;\r\n\r\n            if (iOS) {\r\n                // iOS doesn't allow selection to be prevented\r\n                this.setState(this.states.idle);\r\n            } else {\r\n                if (!this.state.allowTextSelection) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        },\r\n\r\n        addMouseHandlers: function() {\r\n            // unlike touch events, mousemove/up is not conveniently fired on the same element,\r\n            // but I don't need to listen to unrelated events all the time\r\n            if (!this.mouseHandlersAttached) {\r\n                this.mouseHandlersAttached = true;\r\n                document.documentElement.addEventListener('mouseleave', this.onMouseLeave, {passive:true, capture: false});\r\n                window.addEventListener('mousemove', this.onMouseMove, {passive:false, capture: true});\r\n                window.addEventListener('mouseup', this.onMouseUp, {passive:false, capture: true});\r\n                window.addEventListener('blur', this.cancel, {passive:true, capture: false});\r\n            }\r\n        },\r\n\r\n        removeMouseHandlers: function() {\r\n            if (this.mouseHandlersAttached) {\r\n                this.mouseHandlersAttached = false;\r\n                document.documentElement.removeEventListener('mouseleave', this.onMouseLeave, {passive:true, capture: false});\r\n                window.removeEventListener('mousemove', this.onMouseMove, {passive:false, capture: true});\r\n                window.removeEventListener('mouseup', this.onMouseUp, {passive:false, capture: true});\r\n                window.removeEventListener('blur', this.cancel, {passive:true, capture: false});\r\n            }\r\n        },\r\n\r\n        onMouseLeave: function(e) {\r\n            e.stopPropagation();\r\n            if (this.usingTouch) return;\r\n\r\n            if (e.target === document.documentElement || e.relatedTarget === document.documentElement) {\r\n                if (this.state.onLeave) {\r\n                    this.state.onLeave.call(this);\r\n                }\r\n            }\r\n        },\r\n\r\n        onMouseDown: function(e) {\r\n            e.stopPropagation();\r\n            if (this.usingTouch || e.button !== 0 || !this.setTarget(e)) return;\r\n\r\n            this.addMouseHandlers(); // mouseup, etc.\r\n\r\n            this.canPreventScrolling = true; // or rather it doesn't apply to mouse\r\n\r\n            this.startAtPosition({\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                time: e.timeStamp,\r\n            });\r\n        },\r\n\r\n        onTouchStart: function(e) {\r\n            e.stopPropagation();\r\n            this.usingTouch = true;\r\n            this.canPreventScrolling = true;\r\n\r\n            // This implementation cares only about single touch\r\n            if (e.touches.length > 1) {\r\n                this.setState(this.states.idle);\r\n                return;\r\n            }\r\n\r\n            if (!this.setTarget(e)) return;\r\n\r\n            this.startAtPosition({\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n                time: e.timeStamp,\r\n            });\r\n        },\r\n\r\n        setTarget: function(e) {\r\n            const targetNode = this.findTargetNode(e.target);\r\n            if (!targetNode) {\r\n                this.setState(this.states.idle);\r\n                return false;\r\n            }\r\n\r\n            //check for a scrollable parent\r\n            let scrollContainer = targetNode.parentNode;\r\n            while (scrollContainer) {\r\n                if (scrollContainer === document.body) break;\r\n                if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] !== 'visible') break;\r\n                scrollContainer = scrollContainer.parentNode;\r\n            }\r\n            scrollContainer = scrollContainer || document.body;\r\n\r\n            this.target = {\r\n                originalTarget: e.target,\r\n                node: targetNode,\r\n                scrollContainer: scrollContainer,\r\n                origScrollTop: scrollContainer.scrollTop,\r\n                origScrollHeight: scrollContainer.scrollHeight,\r\n                baseTransform: getTransform(targetNode),\r\n            };\r\n            return true;\r\n        },\r\n\r\n        startAtPosition: function(pos) {\r\n            this.startPosition = this.previousPosition = this.latestPosition = pos;\r\n            this.setState(this.states.undecided);\r\n        },\r\n\r\n        updatePosition: function(e, pos) {\r\n            if (this.target == null) {\r\n                return;\r\n            }\r\n            this.latestPosition = pos;\r\n\r\n            if (this.state.onMove) {\r\n                if (this.state.onMove.call(this) === false) {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n\r\n            // sample latestPosition 100ms for velocity\r\n            if (this.latestPosition.time - this.previousPosition.time > 100) {\r\n                this.previousPosition = this.latestPosition;\r\n            }\r\n        },\r\n\r\n        onMouseMove: function(e) {\r\n            e.stopPropagation();\r\n            this.updatePosition(e, {\r\n                x: e.clientX,\r\n                y: e.clientY,\r\n                time: e.timeStamp,\r\n            });\r\n        },\r\n\r\n        onTouchMove: function(e) {\r\n            e.stopPropagation();\r\n            this.updatePosition(e, {\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n                time: e.timeStamp,\r\n            });\r\n\r\n            // In Apple's touch model only the first move event after touchstart can prevent scrolling (and event.cancelable is broken)\r\n            this.canPreventScrolling = false;\r\n        },\r\n\r\n        onMouseUp: function(e) {\r\n            e.stopPropagation();\r\n            if (this.usingTouch || e.button !== 0) return;\r\n\r\n            if (this.state.onEnd && false === this.state.onEnd.call(this)) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        onTouchEnd: function(e) {\r\n            e.stopPropagation();\r\n            if (e.touches.length > 1) {\r\n                this.cancel();\r\n            } else if (this.state.onEnd && false === this.state.onEnd.call(this)) {\r\n                e.preventDefault();\r\n            }\r\n        },\r\n\r\n        getTotalMovement: function() {\r\n            const scrollOffset = this.target.scrollContainer.scrollTop - this.target.origScrollTop;\r\n            return {\r\n                x: this.latestPosition.x - this.startPosition.x,\r\n                y: this.latestPosition.y - this.startPosition.y + scrollOffset,\r\n                time: this.latestPosition.time - this.startPosition.time,\r\n            };\r\n        },\r\n\r\n        getAbsoluteMovement: function() {\r\n            const move = this.getTotalMovement();\r\n            return {\r\n                x: Math.abs(move.x),\r\n                y: Math.abs(move.y),\r\n                time: move.time,\r\n                directionX: move.x < 0 ? 'left' : 'right',\r\n                directionY: move.y < 0 ? 'up' : 'down',\r\n            };\r\n        },\r\n\r\n        updateScrolling: function() {\r\n            let triggerOffset = 40,\r\n                offset = 0;\r\n\r\n            const scrollable = this.target.scrollContainer,\r\n                containerRect = scrollable.getBoundingClientRect(),\r\n                targetRect = this.target.node.getBoundingClientRect(),\r\n                bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom,\r\n                topOffset = targetRect.top - Math.max(containerRect.top, 0),\r\n                maxScrollTop = this.target.origScrollHeight - Math.min(scrollable.clientHeight, window.innerHeight);\r\n\r\n            if (bottomOffset < triggerOffset) {\r\n              offset = Math.min(triggerOffset, triggerOffset - bottomOffset);\r\n            }\r\n            else if (topOffset < triggerOffset) {\r\n              offset = Math.max(-triggerOffset, topOffset - triggerOffset);\r\n            }\r\n\r\n            scrollable.scrollTop = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset));\r\n        },\r\n\r\n        dispatch: function(targetNode, eventName, detail) {\r\n            let event = document.createEvent('CustomEvent');\r\n            if (event && event.initCustomEvent) {\r\n                event.initCustomEvent('slip:' + eventName, true, true, detail);\r\n            } else {\r\n                event = document.createEvent('Event');\r\n                event.initEvent('slip:' + eventName, true, true);\r\n                event.detail = detail;\r\n            }\r\n            return targetNode.dispatchEvent(event);\r\n        },\r\n\r\n        animateToZero: function(callback, target) {\r\n            // save, because this.target/container could change during animation\r\n            target = target || this.target;\r\n\r\n            // target.node.style[transitionJSPropertyName] = transformCSSPropertyName + ' 0.1s ease-out';\r\n            // target.node.style[transitionJSPropertyName] = transformCSSPropertyName + ' 0.0s';\r\n            target.node.style[transformJSPropertyName] = 'translate(0,0) ' + target.baseTransform.value;\r\n            setTimeout(function(){\r\n                target.node.style[transitionJSPropertyName] = '';\r\n                target.node.style[transformJSPropertyName] = target.baseTransform.original;\r\n                target.node.classList.remove('slip-reordering');\r\n                target.node.classList.add('slip-reordered');\r\n                const fn = e => {\r\n                    target.node.classList.remove('slip-reordered');\r\n                    target.node.removeEventListener(\"transitionend\", fn, false);\r\n                }\r\n                target.node.addEventListener(\"transitionend\", fn, false);\r\n                if (callback) callback.call(this, target);\r\n            }.bind(this), 100);\r\n        },\r\n    };\r\n\r\n    return Slip;\r\n})();\r\n","import React, { Component, PureComponent } from 'react';\nimport {Slip} from './slip';\nimport FlipMove from 'react-flip-move';\nimport './App.css';\n\nconst generateItems = length => [...Array(length).keys()].map(k => `Item ${k}`)\n\nclass App extends Component {\n\n  state = {\n    items: generateItems(80),\n    reordering: false\n  }\n  \n  setListRef = el => {\n    this.list = el;\n    console.log(this.list);\n    new Slip(this.list);\n    this.list.addEventListener('slip:reorder', e => {\n      console.log(e);\n      const { originalIndex: oldIndex, spliceIndex: newIndex } = e.detail;\n      const items = reorder(this.state.items, oldIndex, newIndex);\n      this.setState({items, reordering:false});\n    });    \n    this.list.addEventListener('slip:beforereorder', e => {\n      this.setState({reordering: true});\n    });    \n  }\n\n  reverse = () => {\n    this.setState({items: [...this.state.items].reverse()});\n    // this.setState({items: reorder(this.state.items,2,7)});\n  }\n  render() {\n    const { items } = this.state;\n    return (\n      <div className=\"App\" onContextMenu={stopEvent}>\n        <button onClick={this.reverse}>Reverse</button>\n        <div className=\"draggable-container\" ref={this.setListRef}>\n          <FlipMove typeName={null} disableAllAnimations={this.state.reordering}>\n            {items.map(item => <ListItem key={item}>{item}</ListItem>)}\n          </FlipMove>\n        </div>\n      </div>\n    );\n  }\n}\n\n// const ListItem = ({children}) => <div className=\"draggable-item\" >{children}</div>\n\nclass ListItem extends PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className=\"draggable-item\" >{children}</div>\n  }\n}\n\n\nconst stopEvent = e => {\n  console.log(\"stopping event\", e);\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nconst reorder = (arr, oldIndex, newIndex) => {\n  if (oldIndex === null && newIndex === null) return arr;\n\n  const result = [...arr];\n  let item = null;\n\n  if (oldIndex !== null) {\n      item = result.splice(oldIndex, 1)[0];\n  }\n\n  if (newIndex !== null) {\n      result.splice(newIndex, 0, item);\n  }\n\n  return result;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}